import CryptoJS from"crypto-js/core.js";import sha256 from"crypto-js/sha256.js";import Base64 from"crypto-js/enc-base64.js";import Utf8 from"crypto-js/enc-utf8.js";var level,logger,nopLogger={debug:()=>{},info:()=>{},warn:()=>{},error:()=>{}},Log=(e=>(e[e.NONE=0]="NONE",e[e.ERROR=1]="ERROR",e[e.WARN=2]="WARN",e[e.INFO=3]="INFO",e[e.DEBUG=4]="DEBUG",e))(Log||{}),Logger=((e=>{e.reset=function(){level=3,logger=nopLogger},e.setLevel=function(e){if(!(0<=e&&e<=4))throw new Error("Invalid log level");level=e},e.setLogger=function(e){logger=e}})(Log=Log||{}),class{constructor(e){this._name=e}debug(...e){4<=level&&logger.debug(Logger._format(this._name,this._method),...e)}info(...e){3<=level&&logger.info(Logger._format(this._name,this._method),...e)}warn(...e){2<=level&&logger.warn(Logger._format(this._name,this._method),...e)}error(...e){1<=level&&logger.error(Logger._format(this._name,this._method),...e)}throw(e){throw this.error(e),e}create(e){const t=Object.create(this);return t._method=e,t.debug("begin"),t}static createStatic(e,t){const s=new Logger(e+"."+t);return s.debug("begin"),s}static _format(e,t){e=`[${e}]`;return t?e+` ${t}:`:e}static debug(e,...t){4<=level&&logger.debug(Logger._format(e),...t)}static info(e,...t){3<=level&&logger.info(Logger._format(e),...t)}static warn(e,...t){2<=level&&logger.warn(Logger._format(e),...t)}static error(e,...t){1<=level&&logger.error(Logger._format(e),...t)}}),UUID_V4_TEMPLATE=(Log.reset(),"10000000-1000-4000-8000-100000000000"),CryptoUtils=class{static _randomWord(){return CryptoJS.lib.WordArray.random(1).words[0]}static generateUUIDv4(){const e=UUID_V4_TEMPLATE.replace(/[018]/g,e=>(+e^CryptoUtils._randomWord()&15>>+e/4).toString(16));return e.replace(/-/g,"")}static generateCodeVerifier(){return CryptoUtils.generateUUIDv4()+CryptoUtils.generateUUIDv4()+CryptoUtils.generateUUIDv4()}static generateCodeChallenge(e){try{var t=sha256(e);return Base64.stringify(t).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}catch(e){throw Logger.error("CryptoUtils.generateCodeChallenge",e),e}}static generateBasicAuth(e,t){e=Utf8.parse([e,t].join(":"));return Base64.stringify(e)}},Event=class{constructor(e){this._name=e,this._logger=new Logger(`Event('${this._name}')`),this._callbacks=[]}addHandler(e){return this._callbacks.push(e),()=>this.removeHandler(e)}removeHandler(e){e=this._callbacks.lastIndexOf(e);0<=e&&this._callbacks.splice(e,1)}raise(...e){this._logger.debug("raise:",...e);for(const t of this._callbacks)t(...e)}};import jwt_decode from"jwt-decode";var JwtUtils=class{static decode(e){try{return jwt_decode(e)}catch(e){throw Logger.error("JwtUtils.decode",e),e}}},PopupUtils=class{static center({...e}){var t;return null==e.width&&(e.width=null!=(t=[800,720,600,480].find(e=>e<=window.outerWidth/1.618))?t:360),null==e.left&&(e.left=Math.max(0,Math.round(window.screenX+(window.outerWidth-e.width)/2))),null!=e.height&&null==e.top&&(e.top=Math.max(0,Math.round(window.screenY+(window.outerHeight-e.height)/2))),e}static serialize(e){return Object.entries(e).filter(([,e])=>null!=e).map(([e,t])=>e+"="+("boolean"!=typeof t?t:t?"yes":"no")).join(",")}},Timer=class extends Event{constructor(){super(...arguments),this._logger=new Logger(`Timer('${this._name}')`),this._timerHandle=null,this._expiration=0,this._callback=()=>{var e=this._expiration-Timer.getEpochTime();this._logger.debug("timer completes in",e),this._expiration<=Timer.getEpochTime()&&(this.cancel(),super.raise())}}static getEpochTime(){return Math.floor(Date.now()/1e3)}init(e){const t=this._logger.create("init");e=Math.max(Math.floor(e),1);var s=Timer.getEpochTime()+e;this.expiration===s&&this._timerHandle?t.debug("skipping since already initialized for expiration at",this.expiration):(this.cancel(),t.debug("using duration",e),this._expiration=s,s=Math.min(e,5),this._timerHandle=setInterval(this._callback,1e3*s))}get expiration(){return this._expiration}cancel(){this._logger.create("cancel"),this._timerHandle&&(clearInterval(this._timerHandle),this._timerHandle=null)}},UrlUtils=class{static readParams(e,t="query"){if(!e)throw new TypeError("Invalid URL");const s=new URL(e,window.location.origin)["fragment"===t?"hash":"search"];return new URLSearchParams(s.slice(1))}},ErrorResponse=class extends Error{constructor(e,t){if(super(e.error_description||e.error||""),this.form=t,this.name="ErrorResponse",!e.error)throw Logger.error("ErrorResponse","No error passed"),new Error("No error passed");this.error=e.error,this.error_description=null!=(t=e.error_description)?t:null,this.error_uri=null!=(t=e.error_uri)?t:null,this.state=e.userState,this.session_state=null!=(t=e.session_state)?t:null}},ErrorTimeout=class extends Error{constructor(e){super(e),this.name="ErrorTimeout"}},AccessTokenEvents=class{constructor(e){this._logger=new Logger("AccessTokenEvents"),this._expiringTimer=new Timer("Access token expiring"),this._expiredTimer=new Timer("Access token expired"),this._expiringNotificationTimeInSeconds=e.expiringNotificationTimeInSeconds}load(t){const s=this._logger.create("load");if(t.access_token&&void 0!==t.expires_in){t=t.expires_in;if(s.debug("access token present, remaining duration:",t),0<t){let e=t-this._expiringNotificationTimeInSeconds;e<=0&&(e=1),s.debug("registering expiring timer, raising in",e,"seconds"),this._expiringTimer.init(e)}else s.debug("canceling existing expiring timer because we're past expiration."),this._expiringTimer.cancel();t=t+1;s.debug("registering expired timer, raising in",t,"seconds"),this._expiredTimer.init(t)}else this._expiringTimer.cancel(),this._expiredTimer.cancel()}unload(){this._logger.debug("unload: canceling existing access token timers"),this._expiringTimer.cancel(),this._expiredTimer.cancel()}addAccessTokenExpiring(e){return this._expiringTimer.addHandler(e)}removeAccessTokenExpiring(e){this._expiringTimer.removeHandler(e)}addAccessTokenExpired(e){return this._expiredTimer.addHandler(e)}removeAccessTokenExpired(e){this._expiredTimer.removeHandler(e)}},CheckSessionIFrame=class{constructor(e,t,s,r,i){this._callback=e,this._client_id=t,this._intervalInSeconds=r,this._stopOnError=i,this._logger=new Logger("CheckSessionIFrame"),this._timer=null,this._session_state=null,this._message=e=>{e.origin===this._frame_origin&&e.source===this._frame.contentWindow&&("error"===e.data?(this._logger.error("error message from check session op iframe"),this._stopOnError&&this.stop()):"changed"===e.data?(this._logger.debug("changed message from check session op iframe"),this.stop(),this._callback()):this._logger.debug(e.data+" message from check session op iframe"))};e=new URL(s);this._frame_origin=e.origin,this._frame=window.document.createElement("iframe"),this._frame.style.visibility="hidden",this._frame.style.position="fixed",this._frame.style.left="-1000px",this._frame.style.top="0",this._frame.width="0",this._frame.height="0",this._frame.src=e.href}load(){return new Promise(e=>{this._frame.onload=()=>{e()},window.document.body.appendChild(this._frame),window.addEventListener("message",this._message,!1)})}start(e){this._session_state!==e&&(this._logger.create("start"),this.stop(),this._session_state=e,(e=()=>{this._frame.contentWindow&&this._session_state&&this._frame.contentWindow.postMessage(this._client_id+" "+this._session_state,this._frame_origin)})(),this._timer=setInterval(e,1e3*this._intervalInSeconds))}stop(){this._logger.create("stop"),this._session_state=null,this._timer&&(clearInterval(this._timer),this._timer=null)}},InMemoryWebStorage=class{constructor(){this._logger=new Logger("InMemoryWebStorage"),this._data={}}clear(){this._logger.create("clear"),this._data={}}getItem(e){return this._logger.create(`getItem('${e}')`),this._data[e]}setItem(e,t){this._logger.create(`setItem('${e}')`),this._data[e]=t}removeItem(e){this._logger.create(`removeItem('${e}')`),delete this._data[e]}get length(){return Object.getOwnPropertyNames(this._data).length}key(e){return Object.getOwnPropertyNames(this._data)[e]}},JsonService=class{constructor(e=[],t=null){this._jwtHandler=t,this._logger=new Logger("JsonService"),this._contentTypes=[],this._contentTypes.push(...e,"application/json"),t&&this._contentTypes.push("application/jwt")}async fetchWithTimeout(e,t={}){const{timeoutInSeconds:s,...r}=t;if(!s)return fetch(e,r);const i=new AbortController;var n=setTimeout(()=>i.abort(),1e3*s);try{return await fetch(e,{...t,signal:i.signal})}catch(e){if(e instanceof DOMException&&"AbortError"===e.name)throw new ErrorTimeout("Network timed out");throw e}finally{clearTimeout(n)}}async getJson(e,{token:t}={}){const s=this._logger.create("getJson"),r={Accept:this._contentTypes.join(", ")};t&&(s.debug("token passed, setting Authorization header"),r.Authorization="Bearer "+t);let i;try{s.debug("url:",e),i=await this.fetchWithTimeout(e,{method:"GET",headers:r})}catch(e){throw s.error("Network Error"),e}s.debug("HTTP response received, status",i.status);const n=i.headers.get("Content-Type");if(n&&!this._contentTypes.find(e=>n.startsWith(e))&&s.throw(new Error(`Invalid response Content-Type: ${null!=n?n:"undefined"}, from URL: `+e)),i.ok&&this._jwtHandler&&null!=n&&n.startsWith("application/jwt"))return this._jwtHandler(await i.text());let o;try{o=await i.json()}catch(e){if(s.error("Error parsing JSON response",e),i.ok)throw e;throw new Error(`${i.statusText} (${i.status})`)}if(i.ok)return o;if(s.error("Error from server:",o),o.error)throw new ErrorResponse(o);throw new Error(`${i.statusText} (${i.status}): `+JSON.stringify(o))}async postForm(e,{body:t,basicAuth:s,timeoutInSeconds:r}){const i=this._logger.create("postForm"),n={Accept:this._contentTypes.join(", "),"Content-Type":"application/x-www-form-urlencoded"};void 0!==s&&(n.Authorization="Basic "+s);let o;try{i.debug("url:",e),o=await this.fetchWithTimeout(e,{method:"POST",headers:n,body:t,timeoutInSeconds:r})}catch(e){throw i.error("Network error"),e}i.debug("HTTP response received, status",o.status);const a=o.headers.get("Content-Type");if(a&&!this._contentTypes.find(e=>a.startsWith(e)))throw new Error(`Invalid response Content-Type: ${null!=a?a:"undefined"}, from URL: `+e);s=await o.text();let c={};if(s)try{c=JSON.parse(s)}catch(e){if(i.error("Error parsing JSON response",e),o.ok)throw e;throw new Error(`${o.statusText} (${o.status})`)}if(o.ok)return c;if(i.error("Error from server:",c),c.error)throw new ErrorResponse(c,t);throw new Error(`${o.statusText} (${o.status}): `+JSON.stringify(c))}},MetadataService=class{constructor(e){this._settings=e,this._logger=new Logger("MetadataService"),this._jsonService=new JsonService(["application/jwk-set+json"]),this._signingKeys=null,this._metadata=null,this._metadataUrl=this._settings.metadataUrl,this._settings.signingKeys&&(this._logger.debug("using signingKeys from settings"),this._signingKeys=this._settings.signingKeys),this._settings.metadata&&(this._logger.debug("using metadata from settings"),this._metadata=this._settings.metadata)}resetSigningKeys(){this._signingKeys=null}async getMetadata(){const e=this._logger.create("getMetadata");if(this._metadata)return e.debug("using cached values"),this._metadata;if(!this._metadataUrl)throw e.throw(new Error("No authority or metadataUrl configured on settings")),null;e.debug("getting metadata from",this._metadataUrl);var t=await this._jsonService.getJson(this._metadataUrl);return e.debug("merging remote JSON with seed metadata"),this._metadata=Object.assign({},this._settings.metadataSeed,t),this._metadata}getIssuer(){return this._getMetadataProperty("issuer")}getAuthorizationEndpoint(){return this._getMetadataProperty("authorization_endpoint")}getUserInfoEndpoint(){return this._getMetadataProperty("userinfo_endpoint")}getTokenEndpoint(e=!0){return this._getMetadataProperty("token_endpoint",e)}getCheckSessionIframe(){return this._getMetadataProperty("check_session_iframe",!0)}getEndSessionEndpoint(){return this._getMetadataProperty("end_session_endpoint",!0)}getRevocationEndpoint(e=!0){return this._getMetadataProperty("revocation_endpoint",e)}getKeysEndpoint(e=!0){return this._getMetadataProperty("jwks_uri",e)}async _getMetadataProperty(e,t=!1){const s=this._logger.create(`_getMetadataProperty('${e}')`);var r=await this.getMetadata();if(s.debug("resolved"),void 0===r[e]){if(!0===t)return void s.warn("Metadata does not contain optional property");s.throw(new Error("Metadata does not contain property "+e))}return r[e]}async getSigningKeys(){const e=this._logger.create("getSigningKeys");if(this._signingKeys)return e.debug("returning signingKeys from cache"),this._signingKeys;var t=await this.getKeysEndpoint(!1),t=(e.debug("got jwks_uri",t),await this._jsonService.getJson(t));if(e.debug("got key set",t),Array.isArray(t.keys))return this._signingKeys=t.keys,this._signingKeys;throw e.throw(new Error("Missing keys on keyset")),null}},WebStorageStateStore=class{constructor({prefix:e="oidc.",store:t=localStorage}={}){this._logger=new Logger("WebStorageStateStore"),this._store=t,this._prefix=e}set(e,t){return this._logger.create(`set('${e}')`),e=this._prefix+e,this._store.setItem(e,t),Promise.resolve()}get(e){this._logger.create(`get('${e}')`),e=this._prefix+e;e=this._store.getItem(e);return Promise.resolve(e)}remove(e){this._logger.create(`remove('${e}')`),e=this._prefix+e;var t=this._store.getItem(e);return this._store.removeItem(e),Promise.resolve(t)}getAllKeys(){this._logger.create("getAllKeys");const t=[];for(let e=0;e<this._store.length;e++){const s=this._store.key(e);s&&0===s.indexOf(this._prefix)&&t.push(s.substr(this._prefix.length))}return Promise.resolve(t)}},DefaultResponseType="code",DefaultScope="openid",DefaultClientAuthentication="client_secret_post",DefaultResponseMode="query",DefaultStaleStateAgeInSeconds=900,DefaultClockSkewInSeconds=300,OidcClientSettingsStore=class{constructor({authority:e,metadataUrl:t,metadata:s,signingKeys:r,metadataSeed:i,client_id:n,client_secret:o,response_type:a=DefaultResponseType,scope:c=DefaultScope,redirect_uri:g,post_logout_redirect_uri:d,client_authentication:h=DefaultClientAuthentication,prompt:l,display:u,max_age:_,ui_locales:p,acr_values:w,resource:m,response_mode:S=DefaultResponseMode,filterProtocolClaims:f=!0,loadUserInfo:v=!1,staleStateAgeInSeconds:y=DefaultStaleStateAgeInSeconds,clockSkewInSeconds:k=DefaultClockSkewInSeconds,userInfoJwtIssuer:b="OP",mergeClaims:E=!1,stateStore:T,extraQueryParams:I={},extraTokenParams:R={}}){this.authority=e,t?this.metadataUrl=t:(this.metadataUrl=e)&&(this.metadataUrl.endsWith("/")||(this.metadataUrl+="/"),this.metadataUrl+=".well-known/openid-configuration"),this.metadata=s,this.metadataSeed=i,this.signingKeys=r,this.client_id=n,this.client_secret=o,this.response_type=a,this.scope=c,this.redirect_uri=g,this.post_logout_redirect_uri=d,this.client_authentication=h,this.prompt=l,this.display=u,this.max_age=_,this.ui_locales=p,this.acr_values=w,this.resource=m,this.response_mode=S,this.filterProtocolClaims=!!f,this.loadUserInfo=!!v,this.staleStateAgeInSeconds=y,this.clockSkewInSeconds=k,this.userInfoJwtIssuer=b,this.mergeClaims=!!E,T?this.stateStore=T:(t="undefined"!=typeof window?window.localStorage:new InMemoryWebStorage,this.stateStore=new WebStorageStateStore({store:t})),this.extraQueryParams=I,this.extraTokenParams=R}},UserInfoService=class{constructor(e){this._metadataService=e,this._logger=new Logger("UserInfoService"),this._getClaimsFromJwt=async e=>{const t=this._logger.create("_getClaimsFromJwt");try{var s=JwtUtils.decode(e);return t.debug("JWT decoding successful"),s}catch(e){throw t.error("Error parsing JWT response"),e}},this._jsonService=new JsonService(void 0,this._getClaimsFromJwt)}async getClaims(e){const t=this._logger.create("getClaims");e||this._logger.throw(new Error("No token passed"));var s=await this._metadataService.getUserInfoEndpoint(),s=(t.debug("got userinfo url",s),await this._jsonService.getJson(s,{token:e}));return t.debug("got claims",s),s}},TokenClient=class{constructor(e,t){this._settings=e,this._metadataService=t,this._logger=new Logger("TokenClient"),this._jsonService=new JsonService}async exchangeCode({grant_type:e="authorization_code",redirect_uri:t=this._settings.redirect_uri,client_id:s=this._settings.client_id,client_secret:r=this._settings.client_secret,...i}){const n=this._logger.create("exchangeCode"),o=(s||n.throw(new Error("A client_id is required")),t||n.throw(new Error("A redirect_uri is required")),i.code||n.throw(new Error("A code is required")),i.code_verifier||n.throw(new Error("A code_verifier is required")),new URLSearchParams({grant_type:e,redirect_uri:t}));for(var[a,c]of Object.entries(i))null!=c&&o.set(a,c);let g;switch(this._settings.client_authentication){case"client_secret_basic":if(!r)throw n.throw(new Error("A client_secret is required")),null;g=CryptoUtils.generateBasicAuth(s,r);break;case"client_secret_post":o.append("client_id",s),r&&o.append("client_secret",r)}e=await this._metadataService.getTokenEndpoint(!1),n.debug("got token endpoint"),t=await this._jsonService.postForm(e,{body:o,basicAuth:g});return n.debug("got response"),t}async exchangeRefreshToken({grant_type:e="refresh_token",client_id:t=this._settings.client_id,client_secret:s=this._settings.client_secret,timeoutInSeconds:r,...i}){const n=this._logger.create("exchangeRefreshToken"),o=(t||n.throw(new Error("A client_id is required")),i.refresh_token||n.throw(new Error("A refresh_token is required")),new URLSearchParams({grant_type:e}));for(var[a,c]of Object.entries(i))null!=c&&o.set(a,c);let g;switch(this._settings.client_authentication){case"client_secret_basic":if(!s)throw n.throw(new Error("A client_secret is required")),null;g=CryptoUtils.generateBasicAuth(t,s);break;case"client_secret_post":o.append("client_id",t),s&&o.append("client_secret",s)}e=await this._metadataService.getTokenEndpoint(!1),n.debug("got token endpoint"),i=await this._jsonService.postForm(e,{body:o,basicAuth:g,timeoutInSeconds:r});return n.debug("got response"),i}async revoke(e){var t;const s=this._logger.create("revoke");e.token||s.throw(new Error("A token is required"));var r,i,n=await this._metadataService.getRevocationEndpoint(!1);s.debug("got revocation endpoint, revoking "+(null!=(t=e.token_type_hint)?t:"default token type"));const o=new URLSearchParams;for([r,i]of Object.entries(e))null!=i&&o.set(r,i);o.set("client_id",this._settings.client_id),this._settings.client_secret&&o.set("client_secret",this._settings.client_secret),await this._jsonService.postForm(n,{body:o}),s.debug("got response")}},ProtocolClaims=["iss","aud","exp","nbf","iat","jti","auth_time","nonce","acr","amr","azp","at_hash"],ResponseValidator=class{constructor(e,t){this._settings=e,this._metadataService=t,this._logger=new Logger("ResponseValidator"),this._userInfoService=new UserInfoService(this._metadataService),this._tokenClient=new TokenClient(this._settings,this._metadataService)}async validateSigninResponse(e,t){const s=this._logger.create("validateSigninResponse");this._processSigninState(e,t),s.debug("state processed"),await this._processCode(e,t),s.debug("code processed"),e.isOpenId&&this._validateIdTokenAttributes(e),s.debug("tokens validated"),await this._processClaims(e,null==t?void 0:t.skipUserInfo,e.isOpenId),s.debug("claims processed")}async validateRefreshResponse(e,t){const s=this._logger.create("validateRefreshResponse");e.userState=t.data,null==e.session_state&&(e.session_state=t.session_state),null==e.scope&&(e.scope=t.scope);var r=e.isOpenId&&!!e.id_token;r&&(this._validateIdTokenAttributes(e,t.id_token),s.debug("ID Token validated")),await this._processClaims(e,!1,r),s.debug("claims processed")}validateSignoutResponse(e,t){const s=this._logger.create("validateSignoutResponse");if(t.id!==e.state&&s.throw(new Error("State does not match")),s.debug("state validated"),e.userState=t.data,e.error)throw s.warn("Response was error",e.error),new ErrorResponse(e)}_processSigninState(e,t){const s=this._logger.create("_processSigninState");if(t.id!==e.state&&s.throw(new Error("State does not match")),t.client_id||s.throw(new Error("No client_id on state")),t.authority||s.throw(new Error("No authority on state")),this._settings.authority!==t.authority&&s.throw(new Error("authority mismatch on settings vs. signin state")),this._settings.client_id&&this._settings.client_id!==t.client_id&&s.throw(new Error("client_id mismatch on settings vs. signin state")),s.debug("state validated"),e.userState=t.data,null!=e.scope||(e.scope=t.scope),e.error)throw s.warn("Response was error",e.error),new ErrorResponse(e);t.code_verifier&&!e.code&&s.throw(new Error("Expected code in response")),!t.code_verifier&&e.code&&s.throw(new Error("Unexpected code in response"))}async _processClaims(e,t=!1,s=!0){const r=this._logger.create("_processClaims");e.profile=this._filterProtocolClaims(e.profile),!t&&this._settings.loadUserInfo&&e.access_token?(r.debug("loading user info"),t=await this._userInfoService.getClaims(e.access_token),r.debug("user info claims received from user info endpoint"),s&&t.sub!==e.profile.sub&&r.throw(new Error("subject from UserInfo response does not match subject in ID Token")),e.profile=this._mergeClaims(e.profile,this._filterProtocolClaims(t)),r.debug("user info claims received, updated profile:",e.profile)):r.debug("not loading user info")}_mergeClaims(e,t){const s={...e};for(var[r,i]of Object.entries(t))for(const n of Array.isArray(i)?i:[i]){const o=s[r];o?Array.isArray(o)?o.includes(n)||o.push(n):s[r]!==n&&("object"==typeof n&&this._settings.mergeClaims?s[r]=this._mergeClaims(o,n):s[r]=[o,n]):s[r]=n}return s}_filterProtocolClaims(e){const t={...e};if(this._settings.filterProtocolClaims)for(const s of ProtocolClaims)delete t[s];return t}async _processCode(e,t){const s=this._logger.create("_processCode");e.code?(s.debug("Validating code"),t=await this._tokenClient.exchangeCode({client_id:t.client_id,client_secret:t.client_secret,code:e.code,redirect_uri:t.redirect_uri,code_verifier:t.code_verifier,...t.extraTokenParams}),Object.assign(e,t)):s.debug("No code to process")}_validateIdTokenAttributes(e,t){const s=this._logger.create("_validateIdTokenAttributes");s.debug("decoding ID Token JWT");var r=JwtUtils.decode(null!=(r=e.id_token)?r:"");r.sub||s.throw(new Error("ID Token is missing a subject claim")),t&&((t=JwtUtils.decode(t)).sub!==r.sub&&s.throw(new Error("sub in id_token does not match current sub")),t.auth_time&&t.auth_time!==r.auth_time&&s.throw(new Error("auth_time in id_token does not match original auth_time")),t.azp&&t.azp!==r.azp&&s.throw(new Error("azp in id_token does not match original azp")),!t.azp&&r.azp&&s.throw(new Error("azp not in id_token, but present in original id_token"))),e.profile=r}},State=class{constructor(e){this.id=e.id||CryptoUtils.generateUUIDv4(),this.data=e.data,e.created&&0<e.created?this.created=e.created:this.created=Timer.getEpochTime(),this.request_type=e.request_type}toStorageString(){return new Logger("State").create("toStorageString"),JSON.stringify({id:this.id,data:this.data,created:this.created,request_type:this.request_type})}static fromStorageString(e){return Logger.createStatic("State","fromStorageString"),new State(JSON.parse(e))}static async clearStaleState(s,e){const r=Logger.createStatic("State","clearStaleState");var i=Timer.getEpochTime()-e,n=await s.getAllKeys();r.debug("got keys",n);for(let e=0;e<n.length;e++){var o=n[e],a=await s.get(o);let t=!1;if(a)try{var c=State.fromStorageString(a);r.debug("got item from key:",o,c.created),c.created<=i&&(t=!0)}catch(e){r.error("Error parsing state for key:",o,e),t=!0}else r.debug("no item in storage for key:",o),t=!0;t&&(r.debug("removed item for key:",o),s.remove(o))}}},SigninState=class extends State{constructor(e){super(e),!0===e.code_verifier?this.code_verifier=CryptoUtils.generateCodeVerifier():e.code_verifier&&(this.code_verifier=e.code_verifier),this.code_verifier&&(this.code_challenge=CryptoUtils.generateCodeChallenge(this.code_verifier)),this.authority=e.authority,this.client_id=e.client_id,this.redirect_uri=e.redirect_uri,this.scope=e.scope,this.client_secret=e.client_secret,this.extraTokenParams=e.extraTokenParams,this.response_mode=e.response_mode,this.skipUserInfo=e.skipUserInfo}toStorageString(){return new Logger("SigninState").create("toStorageString"),JSON.stringify({id:this.id,data:this.data,created:this.created,request_type:this.request_type,code_verifier:this.code_verifier,authority:this.authority,client_id:this.client_id,redirect_uri:this.redirect_uri,scope:this.scope,client_secret:this.client_secret,extraTokenParams:this.extraTokenParams,response_mode:this.response_mode,skipUserInfo:this.skipUserInfo})}static fromStorageString(e){Logger.createStatic("SigninState","fromStorageString");e=JSON.parse(e);return new SigninState(e)}},SigninRequest=class{constructor({url:e,authority:t,client_id:s,redirect_uri:r,response_type:i,scope:n,state_data:o,response_mode:a,request_type:c,client_secret:g,nonce:d,skipUserInfo:h,extraQueryParams:l,extraTokenParams:u,..._}){if(this._logger=new Logger("SigninRequest"),!e)throw this._logger.error("ctor: No url passed"),new Error("url");if(!s)throw this._logger.error("ctor: No client_id passed"),new Error("client_id");if(!r)throw this._logger.error("ctor: No redirect_uri passed"),new Error("redirect_uri");if(!i)throw this._logger.error("ctor: No response_type passed"),new Error("response_type");if(!n)throw this._logger.error("ctor: No scope passed"),new Error("scope");if(!t)throw this._logger.error("ctor: No authority passed"),new Error("authority");this.state=new SigninState({data:o,request_type:c,code_verifier:!0,client_id:s,authority:t,redirect_uri:r,response_mode:a,client_secret:g,scope:n,extraTokenParams:u,skipUserInfo:h});const p=new URL(e);p.searchParams.append("client_id",s),p.searchParams.append("redirect_uri",r),p.searchParams.append("response_type",i),p.searchParams.append("scope",n),d&&p.searchParams.append("nonce",d),p.searchParams.append("state",this.state.id),this.state.code_challenge&&(p.searchParams.append("code_challenge",this.state.code_challenge),p.searchParams.append("code_challenge_method","S256"));for(var[w,m]of Object.entries({response_mode:a,..._,...l}))null!=m&&p.searchParams.append(w,m.toString());this.url=p.href}},OidcScope="openid",SigninResponse=class{constructor(e){this.access_token="",this.token_type="",this.profile={},this.state=e.get("state"),this.session_state=e.get("session_state"),this.error=e.get("error"),this.error_description=e.get("error_description"),this.error_uri=e.get("error_uri"),this.code=e.get("code")}get expires_in(){if(void 0!==this.expires_at)return this.expires_at-Timer.getEpochTime()}set expires_in(e){void 0!==(e="string"==typeof e?Number(e):e)&&0<=e&&(this.expires_at=Math.floor(e)+Timer.getEpochTime())}get isOpenId(){var e;return(null==(e=this.scope)?void 0:e.split(" ").includes(OidcScope))||!!this.id_token}},SignoutRequest=class{constructor({url:e,state_data:t,id_token_hint:s,post_logout_redirect_uri:r,extraQueryParams:i,request_type:n}){if(this._logger=new Logger("SignoutRequest"),!e)throw this._logger.error("ctor: No url passed"),new Error("url");const o=new URL(e);s&&o.searchParams.append("id_token_hint",s),r&&(o.searchParams.append("post_logout_redirect_uri",r),t&&(this.state=new State({data:t,request_type:n}),o.searchParams.append("state",this.state.id)));for(var[a,c]of Object.entries({...i}))null!=c&&o.searchParams.append(a,c.toString());this.url=o.href}},SignoutResponse=class{constructor(e){this.state=e.get("state"),this.error=e.get("error"),this.error_description=e.get("error_description"),this.error_uri=e.get("error_uri")}},OidcClient=class{constructor(e){this._logger=new Logger("OidcClient"),this.settings=new OidcClientSettingsStore(e),this.metadataService=new MetadataService(this.settings),this._validator=new ResponseValidator(this.settings,this.metadataService),this._tokenClient=new TokenClient(this.settings,this.metadataService)}async createSigninRequest({state:e,request:t,request_uri:s,request_type:r,id_token_hint:i,login_hint:n,skipUserInfo:o,nonce:a,response_type:c=this.settings.response_type,scope:g=this.settings.scope,redirect_uri:d=this.settings.redirect_uri,prompt:h=this.settings.prompt,display:l=this.settings.display,max_age:u=this.settings.max_age,ui_locales:_=this.settings.ui_locales,acr_values:p=this.settings.acr_values,resource:w=this.settings.resource,response_mode:m=this.settings.response_mode,extraQueryParams:S=this.settings.extraQueryParams,extraTokenParams:f=this.settings.extraTokenParams}){const v=this._logger.create("createSigninRequest");if("code"!==c)throw new Error("Only the Authorization Code flow (with PKCE) is supported");var y=await this.metadataService.getAuthorizationEndpoint(),y=(v.debug("Received authorization endpoint",y),new SigninRequest({url:y,authority:this.settings.authority,client_id:this.settings.client_id,redirect_uri:d,response_type:c,scope:g,state_data:e,prompt:h,display:l,max_age:u,ui_locales:_,id_token_hint:i,login_hint:n,acr_values:p,resource:w,request:t,request_uri:s,extraQueryParams:S,extraTokenParams:f,request_type:r,response_mode:m,client_secret:this.settings.client_secret,skipUserInfo:o,nonce:a}));await this.clearStaleState();const k=y.state;return await this.settings.stateStore.set(k.id,k.toStorageString()),y}async readSigninResponseState(e,t=!1){const s=this._logger.create("readSigninResponseState");e=new SigninResponse(UrlUtils.readParams(e,this.settings.response_mode));if(!e.state)throw s.throw(new Error("No state in response")),null;t=await this.settings.stateStore[t?"remove":"get"](e.state);if(t)return{state:SigninState.fromStorageString(t),response:e};throw s.throw(new Error("No matching state found in storage")),null}async processSigninResponse(e){const t=this._logger.create("processSigninResponse");var{state:e,response:s}=await this.readSigninResponseState(e,!0);return t.debug("received state from storage; validating response"),await this._validator.validateSigninResponse(s,e),s}async useRefreshToken({state:e,timeoutInSeconds:t}){const s=this._logger.create("useRefreshToken");var t=await this._tokenClient.exchangeRefreshToken({refresh_token:e.refresh_token,scope:e.scope,timeoutInSeconds:t}),r=new SigninResponse(new URLSearchParams);return Object.assign(r,t),s.debug("validating response",r),await this._validator.validateRefreshResponse(r,e),r}async createSignoutRequest({state:e,id_token_hint:t,request_type:s,post_logout_redirect_uri:r=this.settings.post_logout_redirect_uri,extraQueryParams:i=this.settings.extraQueryParams}={}){const n=this._logger.create("createSignoutRequest");var o=await this.metadataService.getEndSessionEndpoint();if(!o)throw n.throw(new Error("No end session endpoint")),null;n.debug("Received end session endpoint",o);o=new SignoutRequest({url:o,id_token_hint:t,post_logout_redirect_uri:r,state_data:e,extraQueryParams:i,request_type:s});await this.clearStaleState();const a=o.state;return a&&(n.debug("Signout request has state to persist"),await this.settings.stateStore.set(a.id,a.toStorageString())),o}async readSignoutResponseState(e,t=!1){const s=this._logger.create("readSignoutResponseState");e=new SignoutResponse(UrlUtils.readParams(e,this.settings.response_mode));if(!e.state){if(s.debug("No state in response"),e.error)throw s.warn("Response was error:",e.error),new ErrorResponse(e);return{state:void 0,response:e}}t=await this.settings.stateStore[t?"remove":"get"](e.state);if(t)return{state:State.fromStorageString(t),response:e};throw s.throw(new Error("No matching state found in storage")),null}async processSignoutResponse(e){const t=this._logger.create("processSignoutResponse");var{state:e,response:s}=await this.readSignoutResponseState(e,!0);return e?(t.debug("Received state from storage; validating response"),this._validator.validateSignoutResponse(s,e)):t.debug("No state from storage; skipping response validation"),s}clearStaleState(){return this._logger.create("clearStaleState"),State.clearStaleState(this.settings.stateStore,this.settings.staleStateAgeInSeconds)}async revokeToken(e,t){return this._logger.create("revokeToken"),this._tokenClient.revoke({token:e,token_type_hint:t})}},SessionMonitor=class{constructor(e){this._userManager=e,this._logger=new Logger("SessionMonitor"),this._start=async e=>{var t=e.session_state;if(t){const o=this._logger.create("_start");if(e.profile?(this._sub=e.profile.sub,this._sid=e.profile.sid,o.debug("session_state",t,", sub",this._sub)):(this._sub=void 0,this._sid=void 0,o.debug("session_state",t,", anonymous user")),this._checkSessionIFrame)this._checkSessionIFrame.start(t);else try{var s=await this._userManager.metadataService.getCheckSessionIframe();if(s){o.debug("initializing check session iframe");var r=this._userManager.settings.client_id,i=this._userManager.settings.checkSessionIntervalInSeconds,n=this._userManager.settings.stopCheckSessionOnError;const a=new CheckSessionIFrame(this._callback,r,s,i,n);await a.load(),(this._checkSessionIFrame=a).start(t)}else o.warn("no check session iframe found in the metadata")}catch(e){o.error("Error from getCheckSessionIframe:",e instanceof Error?e.message:e)}}},this._stop=()=>{const s=this._logger.create("_stop");if(this._sub=void 0,this._sid=void 0,this._checkSessionIFrame&&this._checkSessionIFrame.stop(),this._userManager.settings.monitorAnonymousSession){const r=setInterval(async()=>{clearInterval(r);try{var e,t=await this._userManager.querySessionStatus();t&&(e={session_state:t.session_state,profile:t.sub&&t.sid?{sub:t.sub,sid:t.sid}:null},this._start(e))}catch(e){s.error("error from querySessionStatus",e instanceof Error?e.message:e)}},1e3)}},this._callback=async()=>{const t=this._logger.create("_callback");try{var s=await this._userManager.querySessionStatus();let e=!0;s&&this._checkSessionIFrame?s.sub===this._sub?(e=!1,this._checkSessionIFrame.start(s.session_state),s.sid===this._sid?t.debug("same sub still logged in at OP, restarting check session iframe; session_state",s.session_state):(t.debug("same sub still logged in at OP, session state has changed, restarting check session iframe; session_state",s.session_state),this._userManager.events._raiseUserSessionChanged())):t.debug("different subject signed into OP",s.sub):t.debug("subject no longer signed into OP"),e?this._sub?this._userManager.events._raiseUserSignedOut():this._userManager.events._raiseUserSignedIn():t.debug("no change in session detected, no event to raise")}catch(e){this._sub&&(t.debug("Error calling queryCurrentSigninSession; raising signed out event",e),this._userManager.events._raiseUserSignedOut())}},e||this._logger.throw(new Error("No user manager passed")),this._userManager.events.addUserLoaded(this._start),this._userManager.events.addUserUnloaded(this._stop),this._init().catch(e=>{this._logger.error(e)})}async _init(){this._logger.create("_init");var e=await this._userManager.getUser();e?this._start(e):this._userManager.settings.monitorAnonymousSession&&(e=await this._userManager.querySessionStatus())&&(e={session_state:e.session_state,profile:e.sub&&e.sid?{sub:e.sub,sid:e.sid}:null},this._start(e))}},User=class{constructor(e){var t;this.id_token=e.id_token,this.session_state=null!=(t=e.session_state)?t:null,this.access_token=e.access_token,this.refresh_token=e.refresh_token,this.token_type=e.token_type,this.scope=e.scope,this.profile=e.profile,this.expires_at=e.expires_at,this.state=e.userState}get expires_in(){if(void 0!==this.expires_at)return this.expires_at-Timer.getEpochTime()}set expires_in(e){void 0!==e&&(this.expires_at=Math.floor(e)+Timer.getEpochTime())}get expired(){var e=this.expires_in;if(void 0!==e)return e<=0}get scopes(){var e;return null!=(e=null==(e=this.scope)?void 0:e.split(" "))?e:[]}toStorageString(){return new Logger("User").create("toStorageString"),JSON.stringify({id_token:this.id_token,session_state:this.session_state,access_token:this.access_token,refresh_token:this.refresh_token,token_type:this.token_type,scope:this.scope,profile:this.profile,expires_at:this.expires_at})}static fromStorageString(e){return Logger.createStatic("User","fromStorageString"),new User(JSON.parse(e))}},messageSource="oidc-client",AbstractChildWindow=class{constructor(){this._abort=new Event("Window navigation aborted"),this._disposeHandlers=new Set,this._window=null}async navigate(o){const a=this._logger.create("navigate");if(!this._window)throw new Error("Attempted to navigate on a disposed window");a.debug("setting URL in window"),this._window.location.replace(o.url);var{url:e,keepOpen:t}=await new Promise((i,n)=>{const e=e=>{var t=e.data,s=null!=(s=o.scriptOrigin)?s:window.location.origin;if(e.origin===s&&(null==t?void 0:t.source)===messageSource){try{var r=UrlUtils.readParams(t.url,o.response_mode).get("state");if(r||a.warn("no state found in response url"),e.source!==this._window&&r!==o.state)return}catch(e){this._dispose(),n(new Error("Invalid response from window"))}i(t)}};window.addEventListener("message",e,!1),this._disposeHandlers.add(()=>window.removeEventListener("message",e,!1)),this._disposeHandlers.add(this._abort.addHandler(e=>{this._dispose(),n(e)}))});return a.debug("got response from window"),this._dispose(),t||this.close(),{url:e}}_dispose(){this._logger.create("_dispose");for(const e of this._disposeHandlers)e();this._disposeHandlers.clear()}static _notifyParent(e,t,s=!1,r=window.location.origin){e.postMessage({source:messageSource,url:t,keepOpen:s},r)}},DefaultPopupWindowFeatures={location:!1,toolbar:!1,height:640},DefaultPopupTarget="_blank",DefaultAccessTokenExpiringNotificationTimeInSeconds=60,DefaultCheckSessionIntervalInSeconds=2,DefaultSilentRequestTimeoutInSeconds=10,UserManagerSettingsStore=class extends OidcClientSettingsStore{constructor(e){var{popup_redirect_uri:t=e.redirect_uri,popup_post_logout_redirect_uri:s=e.post_logout_redirect_uri,popupWindowFeatures:r=DefaultPopupWindowFeatures,popupWindowTarget:i=DefaultPopupTarget,redirectMethod:n="assign",redirectTarget:o="self",iframeNotifyParentOrigin:a=e.iframeNotifyParentOrigin,iframeScriptOrigin:c=e.iframeScriptOrigin,silent_redirect_uri:g=e.redirect_uri,silentRequestTimeoutInSeconds:d=DefaultSilentRequestTimeoutInSeconds,automaticSilentRenew:h=!0,validateSubOnSilentRenew:l=!0,includeIdTokenInSilentRenew:u=!1,monitorSession:_=!1,monitorAnonymousSession:p=!1,checkSessionIntervalInSeconds:w=DefaultCheckSessionIntervalInSeconds,query_status_response_type:m="code",stopCheckSessionOnError:S=!0,revokeTokenTypes:f=["access_token","refresh_token"],revokeTokensOnSignout:v=!1,accessTokenExpiringNotificationTimeInSeconds:y=DefaultAccessTokenExpiringNotificationTimeInSeconds,userStore:k}=e;super(e),this.popup_redirect_uri=t,this.popup_post_logout_redirect_uri=s,this.popupWindowFeatures=r,this.popupWindowTarget=i,this.redirectMethod=n,this.redirectTarget=o,this.iframeNotifyParentOrigin=a,this.iframeScriptOrigin=c,this.silent_redirect_uri=g,this.silentRequestTimeoutInSeconds=d,this.automaticSilentRenew=h,this.validateSubOnSilentRenew=l,this.includeIdTokenInSilentRenew=u,this.monitorSession=_,this.monitorAnonymousSession=p,this.checkSessionIntervalInSeconds=w,this.stopCheckSessionOnError=S,this.query_status_response_type=m,this.revokeTokenTypes=f,this.revokeTokensOnSignout=v,this.accessTokenExpiringNotificationTimeInSeconds=y,k?this.userStore=k:(e="undefined"!=typeof window?window.sessionStorage:new InMemoryWebStorage,this.userStore=new WebStorageStateStore({store:e}))}},IFrameWindow=class extends AbstractChildWindow{constructor({silentRequestTimeoutInSeconds:e=DefaultSilentRequestTimeoutInSeconds}){super(),this._logger=new Logger("IFrameWindow"),this._timeoutInSeconds=e,this._frame=IFrameWindow.createHiddenIframe(),this._window=this._frame.contentWindow}static createHiddenIframe(){const e=window.document.createElement("iframe");return e.style.visibility="hidden",e.style.position="fixed",e.style.left="-1000px",e.style.top="0",e.width="0",e.height="0",e.setAttribute("sandbox","allow-scripts allow-same-origin allow-forms"),window.document.body.appendChild(e),e}async navigate(e){this._logger.debug("navigate: Using timeout of:",this._timeoutInSeconds);const t=setTimeout(()=>this._abort.raise(new ErrorTimeout("IFrame timed out without a response")),1e3*this._timeoutInSeconds);return this._disposeHandlers.add(()=>clearTimeout(t)),super.navigate(e)}close(){var e;this._frame&&(this._frame.parentNode&&(this._frame.addEventListener("load",e=>{var t,e=e.target;null!=(t=e.parentNode)&&t.removeChild(e),this._abort.raise(new Error("IFrame removed from DOM"))},!0),null!=(e=this._frame.contentWindow)&&e.location.replace("about:blank")),this._frame=null),this._window=null}static notifyParent(e,t){return super._notifyParent(window.parent,e,!1,t)}},IFrameNavigator=class{constructor(e){this._settings=e,this._logger=new Logger("IFrameNavigator")}async prepare({silentRequestTimeoutInSeconds:e=this._settings.silentRequestTimeoutInSeconds}){return new IFrameWindow({silentRequestTimeoutInSeconds:e})}async callback(e){this._logger.create("callback"),IFrameWindow.notifyParent(e,this._settings.iframeNotifyParentOrigin)}},checkForPopupClosedInterval=500,PopupWindow=class extends AbstractChildWindow{constructor({popupWindowTarget:e=DefaultPopupTarget,popupWindowFeatures:t={}}){super(),this._logger=new Logger("PopupWindow");t=PopupUtils.center({...DefaultPopupWindowFeatures,...t});this._window=window.open(void 0,e,PopupUtils.serialize(t))}async navigate(e){var t;null!=(t=this._window)&&t.focus();const s=setInterval(()=>{this._window&&!this._window.closed||this._abort.raise(new Error("Popup closed by user"))},checkForPopupClosedInterval);return this._disposeHandlers.add(()=>clearInterval(s)),super.navigate(e)}close(){this._window&&!this._window.closed&&(this._window.close(),this._abort.raise(new Error("Popup closed"))),this._window=null}static notifyOpener(e,t){if(window.opener)return super._notifyParent(window.opener,e,t);throw new Error("No window.opener. Can't complete notification.")}},PopupNavigator=class{constructor(e){this._settings=e,this._logger=new Logger("PopupNavigator")}async prepare({popupWindowFeatures:e=this._settings.popupWindowFeatures,popupWindowTarget:t=this._settings.popupWindowTarget}){return new PopupWindow({popupWindowFeatures:e,popupWindowTarget:t})}async callback(e,t=!1){this._logger.create("callback"),PopupWindow.notifyOpener(e,t)}},RedirectNavigator=class{constructor(e){this._settings=e,this._logger=new Logger("RedirectNavigator")}async prepare({redirectMethod:e=this._settings.redirectMethod,redirectTarget:t=this._settings.redirectTarget}){this._logger.create("prepare");let s=window.self;const r=(s="top"===t?null!=(t=window.top)?t:window.self:s).location[e].bind(s.location);let i;return{navigate:async e=>{this._logger.create("navigate");var t=new Promise((e,t)=>{i=t});return r(e.url),t},close:()=>{this._logger.create("close"),null!=i&&i(new Error("Redirect aborted")),s.stop()}}}},UserManagerEvents=class extends AccessTokenEvents{constructor(e){super({expiringNotificationTimeInSeconds:e.accessTokenExpiringNotificationTimeInSeconds}),this._logger=new Logger("UserManagerEvents"),this._userLoaded=new Event("User loaded"),this._userUnloaded=new Event("User unloaded"),this._silentRenewError=new Event("Silent renew error"),this._userSignedIn=new Event("User signed in"),this._userSignedOut=new Event("User signed out"),this._userSessionChanged=new Event("User session changed")}load(e,t=!0){super.load(e),t&&this._userLoaded.raise(e)}unload(){super.unload(),this._userUnloaded.raise()}addUserLoaded(e){return this._userLoaded.addHandler(e)}removeUserLoaded(e){return this._userLoaded.removeHandler(e)}addUserUnloaded(e){return this._userUnloaded.addHandler(e)}removeUserUnloaded(e){return this._userUnloaded.removeHandler(e)}addSilentRenewError(e){return this._silentRenewError.addHandler(e)}removeSilentRenewError(e){return this._silentRenewError.removeHandler(e)}_raiseSilentRenewError(e){this._silentRenewError.raise(e)}addUserSignedIn(e){return this._userSignedIn.addHandler(e)}removeUserSignedIn(e){this._userSignedIn.removeHandler(e)}_raiseUserSignedIn(){this._userSignedIn.raise()}addUserSignedOut(e){return this._userSignedOut.addHandler(e)}removeUserSignedOut(e){this._userSignedOut.removeHandler(e)}_raiseUserSignedOut(){this._userSignedOut.raise()}addUserSessionChanged(e){return this._userSessionChanged.addHandler(e)}removeUserSessionChanged(e){this._userSessionChanged.removeHandler(e)}_raiseUserSessionChanged(){this._userSessionChanged.raise()}},SilentRenewService=class{constructor(e){this._userManager=e,this._logger=new Logger("SilentRenewService"),this._isStarted=!1,this._retryTimer=new Timer("Retry Silent Renew"),this._tokenExpiring=async()=>{const t=this._logger.create("_tokenExpiring");try{await this._userManager.signinSilent(),t.debug("silent token renewal successful")}catch(e){if(e instanceof ErrorTimeout)return t.warn("ErrorTimeout from signinSilent:",e,"retry in 5s"),void this._retryTimer.init(5);t.error("Error from signinSilent:",e),this._userManager.events._raiseSilentRenewError(e)}}}async start(){const t=this._logger.create("start");if(!this._isStarted){this._isStarted=!0,this._userManager.events.addAccessTokenExpiring(this._tokenExpiring),this._retryTimer.addHandler(this._tokenExpiring);try{await this._userManager.getUser()}catch(e){t.error("getUser error",e)}}}stop(){this._isStarted&&(this._retryTimer.cancel(),this._retryTimer.removeHandler(this._tokenExpiring),this._userManager.events.removeAccessTokenExpiring(this._tokenExpiring),this._isStarted=!1)}},RefreshState=class{constructor(e){this.refresh_token=e.refresh_token,this.id_token=e.id_token,this.session_state=e.session_state,this.scope=e.scope,this.data=e.state}},UserManager=class{constructor(e){this._logger=new Logger("UserManager"),this.settings=new UserManagerSettingsStore(e),this._client=new OidcClient(e),this._redirectNavigator=new RedirectNavigator(this.settings),this._popupNavigator=new PopupNavigator(this.settings),this._iframeNavigator=new IFrameNavigator(this.settings),this._events=new UserManagerEvents(this.settings),this._silentRenewService=new SilentRenewService(this),this.settings.automaticSilentRenew&&this.startSilentRenew(),this._sessionMonitor=null,this.settings.monitorSession&&(this._sessionMonitor=new SessionMonitor(this))}get events(){return this._events}get metadataService(){return this._client.metadataService}async getUser(){const e=this._logger.create("getUser");var t=await this._loadUser();return t?(e.info("user loaded"),this._events.load(t,!1),t):(e.info("user not found in storage"),null)}async removeUser(){const e=this._logger.create("removeUser");await this.storeUser(null),e.info("user removed from storage"),this._events.unload()}async signinRedirect(e={}){this._logger.create("signinRedirect");const{redirectMethod:t,...s}=e;e=await this._redirectNavigator.prepare({redirectMethod:t});await this._signinStart({request_type:"si:r",...s},e)}async signinRedirectCallback(e=window.location.href){const t=this._logger.create("signinRedirectCallback");e=await this._signinEnd(e);return e.profile&&e.profile.sub?t.info("success, signed in subject",e.profile.sub):t.info("no subject"),e}async signinPopup(e={}){const t=this._logger.create("signinPopup"),{popupWindowFeatures:s,popupWindowTarget:r,...i}=e;var e=this.settings.popup_redirect_uri,n=(e||t.throw(new Error("No popup_redirect_uri configured")),await this._popupNavigator.prepare({popupWindowFeatures:s,popupWindowTarget:r})),e=await this._signin({request_type:"si:p",redirect_uri:e,display:"popup",...i},n);return e&&(e.profile&&e.profile.sub?t.info("success, signed in subject",e.profile.sub):t.info("no subject")),e}async signinPopupCallback(e=window.location.href,t=!1){const s=this._logger.create("signinPopupCallback");await this._popupNavigator.callback(e,t),s.info("success")}async signinSilent(e={}){const t=this._logger.create("signinSilent"),{silentRequestTimeoutInSeconds:s,...r}=e;let i=await this._loadUser();if(null!=i&&i.refresh_token)return t.debug("using refresh token"),e=new RefreshState(i),this._useRefreshToken(e);var e=this.settings.silent_redirect_uri;e||t.throw(new Error("No silent_redirect_uri configured"));let n;i&&this.settings.validateSubOnSilentRenew&&(t.debug("subject prior to silent renew:",i.profile.sub),n=i.profile.sub);var o=await this._iframeNavigator.prepare({silentRequestTimeoutInSeconds:s});return(i=await this._signin({request_type:"si:s",redirect_uri:e,prompt:"none",id_token_hint:!this.settings.includeIdTokenInSilentRenew||null==i?void 0:i.id_token,...r},o,n))&&(null!=(e=i.profile)&&e.sub?t.info("success, signed in subject",i.profile.sub):t.info("no subject")),i}async _useRefreshToken(e){var t=await this._client.useRefreshToken({state:e,timeoutInSeconds:this.settings.silentRequestTimeoutInSeconds}),e=new User({...e,...t});return await this.storeUser(e),this._events.load(e),e}async signinSilentCallback(e=window.location.href){const t=this._logger.create("signinSilentCallback");await this._iframeNavigator.callback(e),t.info("success")}async signinCallback(e=window.location.href){var t=(await this._client.readSigninResponseState(e))["state"];switch(t.request_type){case"si:r":return this.signinRedirectCallback(e);case"si:p":return this.signinPopupCallback(e);case"si:s":return this.signinSilentCallback(e);default:throw new Error("invalid response_type in state")}}async signoutCallback(e=window.location.href,t=!1){var s=(await this._client.readSignoutResponseState(e))["state"];if(s)switch(s.request_type){case"so:r":await this.signoutRedirectCallback(e);break;case"so:p":await this.signoutPopupCallback(e,t);break;default:throw new Error("invalid response_type in state")}}async querySessionStatus(e={}){const t=this._logger.create("querySessionStatus"),{silentRequestTimeoutInSeconds:s,...r}=e;var e=this.settings.silent_redirect_uri,i=(e||t.throw(new Error("No silent_redirect_uri configured")),await this._iframeNavigator.prepare({silentRequestTimeoutInSeconds:s})),e=await this._signinStart({request_type:"si:s",redirect_uri:e,prompt:"none",response_type:this.settings.query_status_response_type,scope:"openid",skipUserInfo:!0,...r},i);try{var n=await this._client.processSigninResponse(e.url);return(t.debug("got signin response"),n.session_state&&n.profile.sub)?(t.info("success for subject",n.profile.sub),{session_state:n.session_state,sub:n.profile.sub,sid:n.profile.sid}):(t.info("success, user not authenticated"),null)}catch(e){if(this.settings.monitorAnonymousSession&&e instanceof ErrorResponse)switch(e.error){case"login_required":case"consent_required":case"interaction_required":case"account_selection_required":return t.info("success for anonymous user"),{session_state:e.session_state}}throw e}}async _signin(e,t,s){e=await this._signinStart(e,t);return this._signinEnd(e.url,s)}async _signinStart(e,t){const s=this._logger.create("_signinStart");try{var r=await this._client.createSigninRequest(e);return s.debug("got signin request"),await t.navigate({url:r.url,state:r.state.id,response_mode:r.state.response_mode,scriptOrigin:this.settings.iframeScriptOrigin})}catch(e){throw s.debug("error after preparing navigator, closing navigator window"),t.close(),e}}async _signinEnd(e,t){const s=this._logger.create("_signinEnd");var e=await this._client.processSigninResponse(e),r=(s.debug("got signin response"),new User(e));if(t){if(t!==r.profile.sub)throw s.debug("current user does not match user returned from signin. sub from signin:",r.profile.sub),new ErrorResponse({...e,error:"login_required"});s.debug("current user matches user returned from signin")}return await this.storeUser(r),s.debug("user stored"),this._events.load(r),r}async signoutRedirect(e={}){const t=this._logger.create("signoutRedirect"),{redirectMethod:s,...r}=e;e=await this._redirectNavigator.prepare({redirectMethod:s});await this._signoutStart({request_type:"so:r",post_logout_redirect_uri:this.settings.post_logout_redirect_uri,...r},e),t.info("success")}async signoutRedirectCallback(e=window.location.href){const t=this._logger.create("signoutRedirectCallback");e=await this._signoutEnd(e);return t.info("success"),e}async signoutPopup(e={}){const t=this._logger.create("signoutPopup"),{popupWindowFeatures:s,popupWindowTarget:r,...i}=e;var e=this.settings.popup_post_logout_redirect_uri,n=await this._popupNavigator.prepare({popupWindowFeatures:s,popupWindowTarget:r});await this._signout({request_type:"so:p",post_logout_redirect_uri:e,state:null==e?void 0:{},...i},n),t.info("success")}async signoutPopupCallback(e=window.location.href,t=!1){const s=this._logger.create("signoutPopupCallback");await this._popupNavigator.callback(e,t),s.info("success")}async _signout(e,t){e=await this._signoutStart(e,t);return this._signoutEnd(e.url)}async _signoutStart(e={},t){var s;const r=this._logger.create("_signoutStart");try{var i=await this._loadUser(),n=(r.debug("loaded current user from storage"),this.settings.revokeTokensOnSignout&&await this._revokeInternal(i),e.id_token_hint||i&&i.id_token),o=(n&&(r.debug("setting id_token_hint in signout request"),e.id_token_hint=n),await this.removeUser(),r.debug("user removed, creating signout request"),await this._client.createSignoutRequest(e));return r.debug("got signout request"),await t.navigate({url:o.url,state:null==(s=o.state)?void 0:s.id})}catch(e){throw r.debug("error after preparing navigator, closing navigator window"),t.close(),e}}async _signoutEnd(e){const t=this._logger.create("_signoutEnd");e=await this._client.processSignoutResponse(e);return t.debug("got signout response"),e}async revokeTokens(e){var t=await this._loadUser();await this._revokeInternal(t,e)}async _revokeInternal(t,e=this.settings.revokeTokenTypes){const s=this._logger.create("_revokeInternal");if(t){e=e.filter(e=>"string"==typeof t[e]);if(e.length){for(const r of e)await this._client.revokeToken(t[r],r),s.info(r+" revoked successfully"),"access_token"!==r&&(t[r]=null);await this.storeUser(t),s.debug("user stored"),this._events.load(t)}else s.debug("no need to revoke due to no token(s)")}}startSilentRenew(){this._logger.create("startSilentRenew"),this._silentRenewService.start()}stopSilentRenew(){this._silentRenewService.stop()}get _userStoreKey(){return`user:${this.settings.authority}:`+this.settings.client_id}async _loadUser(){const e=this._logger.create("_loadUser");var t=await this.settings.userStore.get(this._userStoreKey);return t?(e.debug("user storageString loaded"),User.fromStorageString(t)):(e.debug("no user storageString"),null)}async storeUser(e){const t=this._logger.create("storeUser");e?(t.debug("storing user"),e=e.toStorageString(),await this.settings.userStore.set(this._userStoreKey,e)):(this._logger.debug("removing user"),await this.settings.userStore.remove(this._userStoreKey))}async clearStaleState(){await this._client.clearStaleState()}},version="2.0.5",Version=version;export{AccessTokenEvents,CheckSessionIFrame,ErrorResponse,ErrorTimeout,InMemoryWebStorage,Log,Logger,MetadataService,OidcClient,OidcClientSettingsStore,SessionMonitor,SigninResponse,SigninState,SignoutResponse,State,User,UserManager,UserManagerSettingsStore,Version,WebStorageStateStore};